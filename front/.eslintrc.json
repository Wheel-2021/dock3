{
  "root": true,
  "env": {
    "browser": true,
    "node": true,
    "vue/setup-compiler-macros": true
  },
  "extends": [
    "plugin:vue/vue3-essential",
    "eslint:recommended",
    "@vue/typescript/recommended",
    "prettier"
  ],
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "vueFeatures": {
      "vModel": true
    }
  },
  "plugins": ["vue", "@typescript-eslint"],
  "rules": {
    "vue/valid-v-model": "off",
    "vue/no-v-model-argument": "off",
    "vue/multi-word-component-names": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-explicit-any": "off"
  },
  "globals": {
    "useAppConfig": "readonly",
    "useAsyncData": "readonly",
    "useCookie": "readonly",
    "useError": "readonly",
    "useFetch": "readonly",
    "useHeadSafe": "readonly",
    "useHead": "readonly",
    "useHydration": "readonly",
    "useLazyAsyncData": "readonly",
    "useLazyFetch": "readonly",
    "useLoadingIndicator": "readonly",
    "useNuxtApp": "readonly",
    "useNuxtData": "readonly",
    "useRequestEvent": "readonly",
    "useRequestHeader": "readonly",
    "useRequestHeaders": "readonly",
    "useRequestURL": "readonly",
    "useRoute": "readonly",
    "useRouter": "readonly",
    "useRuntimeConfig": "readonly",
    "useSeoMeta": "readonly",
    "useServerSeoMeta": "readonly",
    "useState": "readonly",
    "$fetch": "readonly",
    "abortNavigation": "readonly",
    "addRouteMiddleware": "readonly",
    "callOnce": "readonly",
    "clearError": "readonly",
    "clearNuxtData": "readonly",
    "clearNuxtState": "readonly",
    "createError": "readonly",
    "defineNuxtComponent": "readonly",
    "defineNuxtConfig": "readonly",
    "defineNuxtRouteMiddleware": "readonly",
    "definePageMeta": "readonly",
    "defineRouteRules": "readonly",
    "navigateTo": "readonly",
    "onBeforeRouteLeave": "readonly",
    "onBeforeRouteUpdate": "readonly",
    "onNuxtReady": "readonly",
    "prefetchComponents": "readonly",
    "preloadComponents": "readonly",
    "preloadRouteComponents": "readonly",
    "prerenderRoutes": "readonly",
    "refreshNuxtData": "readonly",
    "reloadNuxtApp": "readonly",
    "setPageLayout": "readonly",
    "setResponseStatus": "readonly",
    "showError": "readonly",
    "updateAppConfig": "readonly",
    "nextTick": "readonly",
    "defineComponent": "readonly",
    "defineAsyncComponent": "readonly",
    "defineCustomElement": "readonly",
    "ref": "readonly",
    "computed": "readonly",
    "reactive": "readonly",
    "readonly": "readonly",
    "watchEffect": "readonly",
    "watchPostEffect": "readonly",
    "watchSyncEffect": "readonly",
    "watch": "readonly",
    "isRef": "readonly",
    "unref": "readonly",
    "toRef": "readonly",
    "toValue": "readonly",
    "toRefs": "readonly",
    "isProxy": "readonly",
    "isReactive": "readonly",
    "isReadonly": "readonly",
    "shallowRef": "readonly",
    "triggerRef": "readonly",
    "customRef": "readonly",
    "shallowReactive": "readonly",
    "shallowReadonly": "readonly",
    "toRaw": "readonly",
    "markRaw": "readonly",
    "effectScope": "readonly",
    "getCurrentScope": "readonly",
    "onScopeDispose": "readonly",
    "onMounted": "readonly",
    "onUpdated": "readonly",
    "onUnmounted": "readonly",
    "onBeforeMount": "readonly",
    "onBeforeUpdate": "readonly",
    "onBeforeUnmount": "readonly",
    "onErrorCaptured": "readonly",
    "onRenderTracked": "readonly",
    "onRenderTriggered": "readonly",
    "onActivated": "readonly",
    "onDeactivated": "readonly",
    "onServerPrefetch": "readonly",
    "provide": "readonly",
    "inject": "readonly",
    "hasInjectionContext": "readonly"
  }
  // "overrides": [
  //   {
  //     "files": ["**/index.vue"],
  //     "rules": {
  //       "vue/multi-word-component-names": "off"
  //     }
  //   }
  // ]
}
